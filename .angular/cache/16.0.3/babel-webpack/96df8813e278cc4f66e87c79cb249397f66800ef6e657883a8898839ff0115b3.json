{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Pipe, InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, Input, Output, SecurityContext, NgModule } from '@angular/core';\nimport { Subject, merge, of, timer } from 'rxjs';\nimport { switchMap, mapTo, distinctUntilChanged, shareReplay, startWith, map, takeUntil, first } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Renderer, marked } from 'marked';\nexport { Renderer as MarkedRenderer } from 'marked';\nimport * as i1$1 from '@angular/common/http';\nimport * as i4 from '@angular/platform-browser';\nconst _c0 = [\"*\"];\nconst BUTTON_TEXT_COPY = 'Copy';\nconst BUTTON_TEXT_COPIED = 'Copied';\nclass ClipboardButtonComponent {\n  constructor() {\n    this._buttonClick$ = new Subject();\n    this.copied$ = this._buttonClick$.pipe(switchMap(() => merge(of(true), timer(3000).pipe(mapTo(false)))), distinctUntilChanged(), shareReplay(1));\n    this.copiedText$ = this.copied$.pipe(startWith(false), map(copied => copied ? BUTTON_TEXT_COPIED : BUTTON_TEXT_COPY));\n  }\n  onCopyToClipboardClick() {\n    this._buttonClick$.next();\n  }\n}\nClipboardButtonComponent.ɵfac = function ClipboardButtonComponent_Factory(t) {\n  return new (t || ClipboardButtonComponent)();\n};\nClipboardButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ClipboardButtonComponent,\n  selectors: [[\"markdown-clipboard\"]],\n  decls: 4,\n  vars: 7,\n  consts: [[1, \"markdown-clipboard-button\", 3, \"click\"]],\n  template: function ClipboardButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ClipboardButtonComponent_Template_button_click_0_listener() {\n        return ctx.onCopyToClipboardClick();\n      });\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"copied\", i0.ɵɵpipeBind1(1, 3, ctx.copied$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 5, ctx.copiedText$));\n    }\n  },\n  dependencies: [i1.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ClipboardButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'markdown-clipboard',\n      template: `\n    <button\n      class=\"markdown-clipboard-button\"\n      [class.copied]=\"copied$ | async\"\n      (click)=\"onCopyToClipboardClick()\"\n    >{{ copiedText$ | async }}</button>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\nclass ClipboardOptions {}\nclass ClipboardRenderOptions extends ClipboardOptions {}\n\n/* eslint-disable */\nclass KatexSpecificOptions {}\nclass LanguagePipe {\n  transform(value, language) {\n    if (value == null) {\n      value = '';\n    }\n    if (language == null) {\n      language = '';\n    }\n    if (typeof value !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid value type [${typeof value}]`);\n      return value;\n    }\n    if (typeof language !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid parameter [${typeof language}]`);\n      return value;\n    }\n    return '```' + language + '\\n' + value + '\\n```';\n  }\n}\nLanguagePipe.ɵfac = function LanguagePipe_Factory(t) {\n  return new (t || LanguagePipe)();\n};\nLanguagePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"language\",\n  type: LanguagePipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LanguagePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'language'\n    }]\n  }], null, null);\n})();\nvar PrismPlugin;\n(function (PrismPlugin) {\n  PrismPlugin[\"CommandLine\"] = \"command-line\";\n  PrismPlugin[\"LineHighlight\"] = \"line-highlight\";\n  PrismPlugin[\"LineNumbers\"] = \"line-numbers\";\n})(PrismPlugin || (PrismPlugin = {}));\nclass MarkedOptions {}\n\n/* eslint-disable max-len */\nconst errorJoyPixelsNotLoaded = '[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information';\nconst errorKatexNotLoaded = '[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\nconst errorMermaidNotLoaded = '[ngx-markdown] When using the `mermaid` attribute you *have to* include Mermaid files to `angular.json` or use imports. See README for more information';\nconst errorClipboardNotLoaded = '[ngx-markdown] When using the `clipboard` attribute you *have to* include Clipboard files to `angular.json` or use imports. See README for more information';\nconst errorClipboardViewContainerRequired = '[ngx-markdown] When using the `clipboard` attribute you *have to* provide the `viewContainerRef` parameter to `MarkdownService.render()` function';\nconst errorSrcWithoutHttpClient = '[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\n/* eslint-enable max-len */\nconst SECURITY_CONTEXT = new InjectionToken('SECURITY_CONTEXT');\nclass ExtendedRenderer extends Renderer {\n  constructor() {\n    super(...arguments);\n    this.ɵNgxMarkdownRendererExtended = false;\n  }\n}\nclass MarkdownService {\n  get options() {\n    return this._options;\n  }\n  set options(value) {\n    this._options = {\n      ...this.DEFAULT_MARKED_OPTIONS,\n      ...value\n    };\n  }\n  get renderer() {\n    return this.options.renderer;\n  }\n  set renderer(value) {\n    this.options.renderer = value;\n  }\n  constructor(platform, securityContext, http, clipboardOptions, options, sanitizer) {\n    this.platform = platform;\n    this.securityContext = securityContext;\n    this.http = http;\n    this.clipboardOptions = clipboardOptions;\n    this.sanitizer = sanitizer;\n    this.DEFAULT_MARKED_OPTIONS = {\n      renderer: new Renderer()\n    };\n    this.DEFAULT_KATEX_OPTIONS = {\n      delimiters: [{\n        left: \"$$\",\n        right: \"$$\",\n        display: true\n      }, {\n        left: \"$\",\n        right: \"$\",\n        display: false\n      }, {\n        left: \"\\\\(\",\n        right: \"\\\\)\",\n        display: false\n      }, {\n        left: \"\\\\begin{equation}\",\n        right: \"\\\\end{equation}\",\n        display: true\n      }, {\n        left: \"\\\\begin{align}\",\n        right: \"\\\\end{align}\",\n        display: true\n      }, {\n        left: \"\\\\begin{alignat}\",\n        right: \"\\\\end{alignat}\",\n        display: true\n      }, {\n        left: \"\\\\begin{gather}\",\n        right: \"\\\\end{gather}\",\n        display: true\n      }, {\n        left: \"\\\\begin{CD}\",\n        right: \"\\\\end{CD}\",\n        display: true\n      }, {\n        left: \"\\\\[\",\n        right: \"\\\\]\",\n        display: true\n      }]\n    };\n    this.DEFAULT_MERMAID_OPTIONS = {\n      startOnLoad: false\n    };\n    this.DEFAULT_CLIPBOARD_OPTIONS = {\n      buttonComponent: undefined\n    };\n    this.DEFAULT_PARSE_OPTIONS = {\n      decodeHtml: false,\n      inline: false,\n      emoji: false,\n      mermaid: false,\n      markedOptions: this.DEFAULT_MARKED_OPTIONS,\n      disableSanitizer: false\n    };\n    this.DEFAULT_RENDER_OPTIONS = {\n      clipboard: false,\n      clipboardOptions: undefined,\n      katex: false,\n      katexOptions: undefined,\n      mermaid: false,\n      mermaidOptions: undefined\n    };\n    this._reload$ = new Subject();\n    this.reload$ = this._reload$.asObservable();\n    this.options = options;\n  }\n  parse(markdown, parseOptions = this.DEFAULT_PARSE_OPTIONS) {\n    const {\n      decodeHtml,\n      inline,\n      emoji,\n      mermaid,\n      disableSanitizer\n    } = parseOptions;\n    const markedOptions = {\n      ...this.options,\n      ...parseOptions.markedOptions\n    };\n    if (mermaid) {\n      this.renderer = this.extendRenderer(markedOptions.renderer || new Renderer());\n    }\n    const trimmed = this.trimIndentation(markdown);\n    const decoded = decodeHtml ? this.decodeHtml(trimmed) : trimmed;\n    const emojified = emoji ? this.parseEmoji(decoded) : decoded;\n    const marked = this.parseMarked(emojified, markedOptions, inline);\n    const sanitized = disableSanitizer ? marked : this.sanitizer.sanitize(this.securityContext, marked);\n    return sanitized || '';\n  }\n  render(element, options = this.DEFAULT_RENDER_OPTIONS, viewContainerRef) {\n    const {\n      clipboard,\n      clipboardOptions,\n      katex,\n      katexOptions,\n      mermaid,\n      mermaidOptions\n    } = options;\n    if (clipboard) {\n      this.renderClipboard(element, viewContainerRef, {\n        ...this.DEFAULT_CLIPBOARD_OPTIONS,\n        ...this.clipboardOptions,\n        ...clipboardOptions\n      });\n    }\n    if (katex) {\n      this.renderKatex(element, {\n        ...this.DEFAULT_KATEX_OPTIONS,\n        ...katexOptions\n      });\n    }\n    if (mermaid) {\n      this.renderMermaid(element, {\n        ...this.DEFAULT_MERMAID_OPTIONS,\n        ...mermaidOptions\n      });\n    }\n    this.highlight(element);\n  }\n  reload() {\n    this._reload$.next();\n  }\n  getSource(src) {\n    if (!this.http) {\n      throw new Error(errorSrcWithoutHttpClient);\n    }\n    return this.http.get(src, {\n      responseType: 'text'\n    }).pipe(map(markdown => this.handleExtension(src, markdown)));\n  }\n  highlight(element) {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof Prism === 'undefined' || typeof Prism.highlightAllUnder === 'undefined') {\n      return;\n    }\n    if (!element) {\n      element = document;\n    }\n    const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\n    Array.prototype.forEach.call(noLanguageElements, x => x.classList.add('language-none'));\n    Prism.highlightAllUnder(element);\n  }\n  decodeHtml(html) {\n    if (!isPlatformBrowser(this.platform)) {\n      return html;\n    }\n    const textarea = document.createElement('textarea');\n    textarea.innerHTML = html;\n    return textarea.value;\n  }\n  extendRenderer(renderer) {\n    const extendedRenderer = renderer;\n    if (extendedRenderer.ɵNgxMarkdownRendererExtended === true) {\n      return renderer;\n    }\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const defaultCode = renderer.code;\n    renderer.code = function (code, language, isEscaped) {\n      return language === 'mermaid' ? `<div class=\"mermaid\">${code}</div>` : defaultCode.call(this, code, language, isEscaped);\n    };\n    extendedRenderer.ɵNgxMarkdownRendererExtended = true;\n    return renderer;\n  }\n  handleExtension(src, markdown) {\n    const urlProtocolIndex = src.lastIndexOf('://');\n    const urlWithoutProtocol = urlProtocolIndex > -1 ? src.substring(urlProtocolIndex + 4) : src;\n    const lastSlashIndex = urlWithoutProtocol.lastIndexOf('/');\n    const lastUrlSegment = lastSlashIndex > -1 ? urlWithoutProtocol.substring(lastSlashIndex + 1).split('?')[0] : '';\n    const lastDotIndex = lastUrlSegment.lastIndexOf('.');\n    const extension = lastDotIndex > -1 ? lastUrlSegment.substring(lastDotIndex + 1) : '';\n    return !!extension && extension !== 'md' ? '```' + extension + '\\n' + markdown + '\\n```' : markdown;\n  }\n  parseMarked(html, markedOptions, inline = false) {\n    return inline ? marked.parseInline(html, markedOptions) : marked.parse(html, markedOptions);\n  }\n  parseEmoji(html) {\n    if (!isPlatformBrowser(this.platform)) {\n      return html;\n    }\n    if (typeof joypixels === 'undefined' || typeof joypixels.shortnameToUnicode === 'undefined') {\n      throw new Error(errorJoyPixelsNotLoaded);\n    }\n    return joypixels.shortnameToUnicode(html);\n  }\n  renderKatex(element, options) {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof katex === 'undefined' || typeof renderMathInElement === 'undefined') {\n      throw new Error(errorKatexNotLoaded);\n    }\n    renderMathInElement(element, options);\n  }\n  renderClipboard(element, viewContainerRef, options) {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof ClipboardJS === 'undefined') {\n      throw new Error(errorClipboardNotLoaded);\n    }\n    if (!viewContainerRef) {\n      throw new Error(errorClipboardViewContainerRequired);\n    }\n    const {\n      buttonComponent,\n      buttonTemplate\n    } = options;\n    // target every <pre> elements\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      const preElement = preElements.item(i);\n      // create <pre> wrapper element\n      const preWrapperElement = document.createElement('div');\n      preWrapperElement.style.position = 'relative';\n      preElement.parentNode.insertBefore(preWrapperElement, preElement);\n      preWrapperElement.appendChild(preElement);\n      // create toolbar element\n      const toolbarWrapperElement = document.createElement('div');\n      toolbarWrapperElement.style.position = 'absolute';\n      toolbarWrapperElement.style.top = '.5em';\n      toolbarWrapperElement.style.right = '.5em';\n      toolbarWrapperElement.style.opacity = '0';\n      toolbarWrapperElement.style.transition = 'opacity 250ms ease-out';\n      preWrapperElement.insertAdjacentElement('beforeend', toolbarWrapperElement);\n      // register listener to show/hide toolbar\n      preElement.onmouseover = () => toolbarWrapperElement.style.opacity = '1';\n      preElement.onmouseout = () => toolbarWrapperElement.style.opacity = '0';\n      // declare embeddedViewRef holding variable\n      let embeddedViewRef;\n      // use provided component via input property\n      // or provided via ClipboardOptions provider\n      if (buttonComponent) {\n        const componentRef = viewContainerRef.createComponent(buttonComponent);\n        embeddedViewRef = componentRef.hostView;\n      }\n      // use provided template via input property\n      else if (buttonTemplate) {\n        embeddedViewRef = viewContainerRef.createEmbeddedView(buttonTemplate);\n      }\n      // use default component\n      else {\n        const componentRef = viewContainerRef.createComponent(ClipboardButtonComponent);\n        embeddedViewRef = componentRef.hostView;\n      }\n      // declare clipboard instance variable\n      let clipboardInstance;\n      // attach clipboard.js to root node\n      embeddedViewRef.rootNodes.forEach(node => {\n        node.onmouseover = () => toolbarWrapperElement.style.opacity = '1';\n        toolbarWrapperElement.appendChild(node);\n        clipboardInstance = new ClipboardJS(node, {\n          text: () => preElement.innerText\n        });\n      });\n      // destroy clipboard instance when view is destroyed\n      embeddedViewRef.onDestroy(() => clipboardInstance.destroy());\n    }\n  }\n  renderMermaid(element, options = this.DEFAULT_MERMAID_OPTIONS) {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof mermaid === 'undefined' || typeof mermaid.init === 'undefined') {\n      throw new Error(errorMermaidNotLoaded);\n    }\n    const mermaidElements = element.querySelectorAll('.mermaid');\n    if (mermaidElements.length === 0) {\n      return;\n    }\n    mermaid.initialize(options);\n    mermaid.init(mermaidElements);\n  }\n  trimIndentation(markdown) {\n    if (!markdown) {\n      return '';\n    }\n    let indentStart;\n    return markdown.split('\\n').map(line => {\n      let lineIdentStart = indentStart;\n      if (line.length > 0) {\n        lineIdentStart = isNaN(lineIdentStart) ? line.search(/\\S|$/) : Math.min(line.search(/\\S|$/), lineIdentStart);\n      }\n      if (isNaN(indentStart)) {\n        indentStart = lineIdentStart;\n      }\n      return lineIdentStart ? line.substring(lineIdentStart) : line;\n    }).join('\\n');\n  }\n}\nMarkdownService.ɵfac = function MarkdownService_Factory(t) {\n  return new (t || MarkdownService)(i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(SECURITY_CONTEXT), i0.ɵɵinject(i1$1.HttpClient, 8), i0.ɵɵinject(ClipboardOptions, 8), i0.ɵɵinject(MarkedOptions, 8), i0.ɵɵinject(i4.DomSanitizer));\n};\nMarkdownService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MarkdownService,\n  factory: MarkdownService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkdownService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.SecurityContext,\n      decorators: [{\n        type: Inject,\n        args: [SECURITY_CONTEXT]\n      }]\n    }, {\n      type: i1$1.HttpClient,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ClipboardOptions,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: MarkedOptions,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i4.DomSanitizer\n    }];\n  }, null);\n})();\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nclass MarkdownComponent {\n  get disableSanitizer() {\n    return this._disableSanitizer;\n  }\n  set disableSanitizer(value) {\n    this._disableSanitizer = this.coerceBooleanProperty(value);\n  }\n  get inline() {\n    return this._inline;\n  }\n  set inline(value) {\n    this._inline = this.coerceBooleanProperty(value);\n  }\n  get srcRelativeLink() {\n    return this._srcRelativeLink;\n  }\n  set srcRelativeLink(value) {\n    this._srcRelativeLink = this.coerceBooleanProperty(value);\n  }\n  // Plugin - clipboard\n  get clipboard() {\n    return this._clipboard;\n  }\n  set clipboard(value) {\n    this._clipboard = this.coerceBooleanProperty(value);\n  }\n  // Plugin - emoji\n  get emoji() {\n    return this._emoji;\n  }\n  set emoji(value) {\n    this._emoji = this.coerceBooleanProperty(value);\n  }\n  // Plugin - katex\n  get katex() {\n    return this._katex;\n  }\n  set katex(value) {\n    this._katex = this.coerceBooleanProperty(value);\n  }\n  // Plugin - mermaid\n  get mermaid() {\n    return this._mermaid;\n  }\n  set mermaid(value) {\n    this._mermaid = this.coerceBooleanProperty(value);\n  }\n  // Plugin - lineHighlight\n  get lineHighlight() {\n    return this._lineHighlight;\n  }\n  set lineHighlight(value) {\n    this._lineHighlight = this.coerceBooleanProperty(value);\n  }\n  // Plugin - lineNumbers\n  get lineNumbers() {\n    return this._lineNumbers;\n  }\n  set lineNumbers(value) {\n    this._lineNumbers = this.coerceBooleanProperty(value);\n  }\n  // Plugin - commandLine\n  get commandLine() {\n    return this._commandLine;\n  }\n  set commandLine(value) {\n    this._commandLine = this.coerceBooleanProperty(value);\n  }\n  constructor(element, markdownService, viewContainerRef) {\n    this.element = element;\n    this.markdownService = markdownService;\n    this.viewContainerRef = viewContainerRef;\n    // Event emitters\n    this.error = new EventEmitter();\n    this.load = new EventEmitter();\n    this.ready = new EventEmitter();\n    this._clipboard = false;\n    this._commandLine = false;\n    this._disableSanitizer = false;\n    this._emoji = false;\n    this._inline = false;\n    this._katex = false;\n    this._lineHighlight = false;\n    this._lineNumbers = false;\n    this._mermaid = false;\n    this._srcRelativeLink = false;\n    this.destroyed$ = new Subject();\n  }\n  ngOnChanges() {\n    this.loadContent();\n  }\n  loadContent() {\n    if (this.data != null) {\n      this.handleData();\n      return;\n    }\n    if (this.src != null) {\n      this.handleSrc();\n      return;\n    }\n  }\n  ngAfterViewInit() {\n    if (!this.data && !this.src) {\n      this.handleTransclusion();\n    }\n    this.markdownService.reload$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.loadContent());\n  }\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n  render(markdown, decodeHtml = false) {\n    let markedOptions;\n    if (this.src && this.srcRelativeLink) {\n      const baseUrl = new URL(this.src, location.origin).pathname;\n      markedOptions = {\n        baseUrl\n      };\n    }\n    const parsedOptions = {\n      decodeHtml,\n      inline: this.inline,\n      emoji: this.emoji,\n      mermaid: this.mermaid,\n      markedOptions,\n      disableSanitizer: this.disableSanitizer\n    };\n    const renderOptions = {\n      clipboard: this.clipboard,\n      clipboardOptions: {\n        buttonComponent: this.clipboardButtonComponent,\n        buttonTemplate: this.clipboardButtonTemplate\n      },\n      katex: this.katex,\n      katexOptions: this.katexOptions,\n      mermaid: this.mermaid,\n      mermaidOptions: this.mermaidOptions\n    };\n    const parsed = this.markdownService.parse(markdown, parsedOptions);\n    this.element.nativeElement.innerHTML = parsed;\n    this.handlePlugins();\n    this.markdownService.render(this.element.nativeElement, renderOptions, this.viewContainerRef);\n    this.ready.emit();\n  }\n  coerceBooleanProperty(value) {\n    return value != null && `${String(value)}` !== 'false';\n  }\n  handleData() {\n    this.render(this.data);\n  }\n  handleSrc() {\n    this.markdownService.getSource(this.src).subscribe({\n      next: markdown => {\n        this.render(markdown);\n        this.load.emit(markdown);\n      },\n      error: error => this.error.emit(error)\n    });\n  }\n  handleTransclusion() {\n    this.render(this.element.nativeElement.innerHTML, true);\n  }\n  handlePlugins() {\n    if (this.commandLine) {\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.CommandLine);\n      this.setPluginOptions(this.element.nativeElement, {\n        dataFilterOutput: this.filterOutput,\n        dataHost: this.host,\n        dataPrompt: this.prompt,\n        dataOutput: this.output,\n        dataUser: this.user\n      });\n    }\n    if (this.lineHighlight) {\n      this.setPluginOptions(this.element.nativeElement, {\n        dataLine: this.line,\n        dataLineOffset: this.lineOffset\n      });\n    }\n    if (this.lineNumbers) {\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\n      this.setPluginOptions(this.element.nativeElement, {\n        dataStart: this.start\n      });\n    }\n  }\n  setPluginClass(element, plugin) {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      const classes = plugin instanceof Array ? plugin : [plugin];\n      preElements.item(i).classList.add(...classes);\n    }\n  }\n  setPluginOptions(element, options) {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      Object.keys(options).forEach(option => {\n        const attributeValue = options[option];\n        if (attributeValue) {\n          const attributeName = this.toLispCase(option);\n          preElements.item(i).setAttribute(attributeName, attributeValue.toString());\n        }\n      });\n    }\n  }\n  toLispCase(value) {\n    const upperChars = value.match(/([A-Z])/g);\n    if (!upperChars) {\n      return value;\n    }\n    let str = value.toString();\n    for (let i = 0, n = upperChars.length; i < n; i++) {\n      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\n    }\n    if (str.slice(0, 1) === '-') {\n      str = str.slice(1);\n    }\n    return str;\n  }\n}\nMarkdownComponent.ɵfac = function MarkdownComponent_Factory(t) {\n  return new (t || MarkdownComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MarkdownService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\nMarkdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MarkdownComponent,\n  selectors: [[\"markdown\"], [\"\", \"markdown\", \"\"]],\n  inputs: {\n    data: \"data\",\n    src: \"src\",\n    disableSanitizer: \"disableSanitizer\",\n    inline: \"inline\",\n    srcRelativeLink: \"srcRelativeLink\",\n    clipboard: \"clipboard\",\n    clipboardButtonComponent: \"clipboardButtonComponent\",\n    clipboardButtonTemplate: \"clipboardButtonTemplate\",\n    emoji: \"emoji\",\n    katex: \"katex\",\n    katexOptions: \"katexOptions\",\n    mermaid: \"mermaid\",\n    mermaidOptions: \"mermaidOptions\",\n    lineHighlight: \"lineHighlight\",\n    line: \"line\",\n    lineOffset: \"lineOffset\",\n    lineNumbers: \"lineNumbers\",\n    start: \"start\",\n    commandLine: \"commandLine\",\n    filterOutput: \"filterOutput\",\n    host: \"host\",\n    prompt: \"prompt\",\n    output: \"output\",\n    user: \"user\"\n  },\n  outputs: {\n    error: \"error\",\n    load: \"load\",\n    ready: \"ready\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MarkdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkdownComponent, [{\n    type: Component,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/component-selector\n      selector: 'markdown, [markdown]',\n      template: '<ng-content></ng-content>'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: MarkdownService\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    src: [{\n      type: Input\n    }],\n    disableSanitizer: [{\n      type: Input\n    }],\n    inline: [{\n      type: Input\n    }],\n    srcRelativeLink: [{\n      type: Input\n    }],\n    clipboard: [{\n      type: Input\n    }],\n    clipboardButtonComponent: [{\n      type: Input\n    }],\n    clipboardButtonTemplate: [{\n      type: Input\n    }],\n    emoji: [{\n      type: Input\n    }],\n    katex: [{\n      type: Input\n    }],\n    katexOptions: [{\n      type: Input\n    }],\n    mermaid: [{\n      type: Input\n    }],\n    mermaidOptions: [{\n      type: Input\n    }],\n    lineHighlight: [{\n      type: Input\n    }],\n    line: [{\n      type: Input\n    }],\n    lineOffset: [{\n      type: Input\n    }],\n    lineNumbers: [{\n      type: Input\n    }],\n    start: [{\n      type: Input\n    }],\n    commandLine: [{\n      type: Input\n    }],\n    filterOutput: [{\n      type: Input\n    }],\n    host: [{\n      type: Input\n    }],\n    prompt: [{\n      type: Input\n    }],\n    output: [{\n      type: Input\n    }],\n    user: [{\n      type: Input\n    }],\n    error: [{\n      type: Output\n    }],\n    load: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }]\n  });\n})();\nclass MarkdownPipe {\n  constructor(domSanitizer, elementRef, markdownService, viewContainerRef, zone) {\n    this.domSanitizer = domSanitizer;\n    this.elementRef = elementRef;\n    this.markdownService = markdownService;\n    this.viewContainerRef = viewContainerRef;\n    this.zone = zone;\n  }\n  transform(value, options) {\n    if (value == null) {\n      return '';\n    }\n    if (typeof value !== 'string') {\n      console.error(`MarkdownPipe has been invoked with an invalid value type [${typeof value}]`);\n      return value;\n    }\n    const markdown = this.markdownService.parse(value, options);\n    this.zone.onStable.pipe(first()).subscribe(() => this.markdownService.render(this.elementRef.nativeElement, options, this.viewContainerRef));\n    return this.domSanitizer.bypassSecurityTrustHtml(markdown);\n  }\n}\nMarkdownPipe.ɵfac = function MarkdownPipe_Factory(t) {\n  return new (t || MarkdownPipe)(i0.ɵɵdirectiveInject(i4.DomSanitizer, 16), i0.ɵɵdirectiveInject(i0.ElementRef, 16), i0.ɵɵdirectiveInject(MarkdownService, 16), i0.ɵɵdirectiveInject(i0.ViewContainerRef, 16), i0.ɵɵdirectiveInject(i0.NgZone, 16));\n};\nMarkdownPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"markdown\",\n  type: MarkdownPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkdownPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'markdown'\n    }]\n  }], function () {\n    return [{\n      type: i4.DomSanitizer\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: MarkdownService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\nconst sharedDeclarations = [ClipboardButtonComponent, LanguagePipe, MarkdownComponent, MarkdownPipe];\nclass MarkdownModule {\n  static forRoot(markdownModuleConfig) {\n    return {\n      ngModule: MarkdownModule,\n      providers: [MarkdownService, markdownModuleConfig && markdownModuleConfig.loader || [], markdownModuleConfig && markdownModuleConfig.clipboardOptions || [], markdownModuleConfig && markdownModuleConfig.markedOptions || [], {\n        provide: SECURITY_CONTEXT,\n        useValue: markdownModuleConfig && markdownModuleConfig.sanitize != null ? markdownModuleConfig.sanitize : SecurityContext.HTML\n      }]\n    };\n  }\n  static forChild() {\n    return {\n      ngModule: MarkdownModule\n    };\n  }\n}\nMarkdownModule.ɵfac = function MarkdownModule_Factory(t) {\n  return new (t || MarkdownModule)();\n};\nMarkdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MarkdownModule\n});\nMarkdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MarkdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: sharedDeclarations,\n      declarations: sharedDeclarations\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable */\nvar MermaidAPI;\n(function (MermaidAPI) {\n  let SecurityLevel;\n  (function (SecurityLevel) {\n    /**\n     * (default) tags in text are encoded, click functionality is disabled\n     */\n    SecurityLevel[\"Strict\"] = \"strict\";\n    /**\n     * tags in text are allowed, click functionality is enabled\n     */\n    SecurityLevel[\"Loose\"] = \"loose\";\n    /**\n     * html tags in text are allowed, (only script element is removed), click functionality is enabled\n     */\n    SecurityLevel[\"Antiscript\"] = \"antiscript\";\n    /**\n     * with this security level all rendering takes place in a sandboxed iframe.\n     * This prevent any javascript running in the context.\n     * This may hinder interactive functionality of the diagram like scripts,\n     * popups in sequence diagram or links to other tabs/targets etc.\n     */\n    SecurityLevel[\"Sandbox\"] = \"sandbox\";\n  })(SecurityLevel = MermaidAPI.SecurityLevel || (MermaidAPI.SecurityLevel = {}));\n  let Theme;\n  (function (Theme) {\n    /**\n     * Designed to modified, as the name implies it is supposed to be used as the base for making custom themes.\n     */\n    Theme[\"Base\"] = \"base\";\n    /**\n     * A theme full of light greens that is easy on the eyes.\n     */\n    Theme[\"Forest\"] = \"forest\";\n    /**\n     * A theme that would go well with other dark colored elements.\n     */\n    Theme[\"Dark\"] = \"dark\";\n    /**\n     *  The default theme for all diagrams.\n     */\n    Theme[\"Default\"] = \"default\";\n    /**\n     * The theme to be used for black and white printing\n     */\n    Theme[\"Neutral\"] = \"neutral\";\n  })(Theme = MermaidAPI.Theme || (MermaidAPI.Theme = {}));\n  let LogLevel;\n  (function (LogLevel) {\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Warn\"] = 3] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    LogLevel[LogLevel[\"Fatal\"] = 5] = \"Fatal\";\n  })(LogLevel = MermaidAPI.LogLevel || (MermaidAPI.LogLevel = {}));\n})(MermaidAPI || (MermaidAPI = {}));\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClipboardButtonComponent, ClipboardOptions, ClipboardRenderOptions, ExtendedRenderer, KatexSpecificOptions, LanguagePipe, MarkdownComponent, MarkdownModule, MarkdownPipe, MarkdownService, MarkedOptions, MermaidAPI, PrismPlugin, SECURITY_CONTEXT, errorClipboardNotLoaded, errorClipboardViewContainerRequired, errorJoyPixelsNotLoaded, errorKatexNotLoaded, errorMermaidNotLoaded, errorSrcWithoutHttpClient };","map":{"version":3,"names":["i0","Component","ChangeDetectionStrategy","Pipe","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","EventEmitter","Input","Output","SecurityContext","NgModule","Subject","merge","of","timer","switchMap","mapTo","distinctUntilChanged","shareReplay","startWith","map","takeUntil","first","i1","isPlatformBrowser","CommonModule","Renderer","marked","MarkedRenderer","i1$1","i4","_c0","BUTTON_TEXT_COPY","BUTTON_TEXT_COPIED","ClipboardButtonComponent","constructor","_buttonClick$","copied$","pipe","copiedText$","copied","onCopyToClipboardClick","next","ɵfac","ClipboardButtonComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","ClipboardButtonComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ClipboardButtonComponent_Template_button_click_0_listener","ɵɵpipe","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ɵɵpipeBind1","ɵɵadvance","ɵɵtextInterpolate","dependencies","AsyncPipe","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","ClipboardOptions","ClipboardRenderOptions","KatexSpecificOptions","LanguagePipe","transform","value","language","console","error","LanguagePipe_Factory","ɵpipe","ɵɵdefinePipe","name","pure","PrismPlugin","MarkedOptions","errorJoyPixelsNotLoaded","errorKatexNotLoaded","errorMermaidNotLoaded","errorClipboardNotLoaded","errorClipboardViewContainerRequired","errorSrcWithoutHttpClient","SECURITY_CONTEXT","ExtendedRenderer","arguments","ɵNgxMarkdownRendererExtended","MarkdownService","options","_options","DEFAULT_MARKED_OPTIONS","renderer","platform","securityContext","http","clipboardOptions","sanitizer","DEFAULT_KATEX_OPTIONS","delimiters","left","right","display","DEFAULT_MERMAID_OPTIONS","startOnLoad","DEFAULT_CLIPBOARD_OPTIONS","buttonComponent","undefined","DEFAULT_PARSE_OPTIONS","decodeHtml","inline","emoji","mermaid","markedOptions","disableSanitizer","DEFAULT_RENDER_OPTIONS","clipboard","katex","katexOptions","mermaidOptions","_reload$","reload$","asObservable","parse","markdown","parseOptions","extendRenderer","trimmed","trimIndentation","decoded","emojified","parseEmoji","parseMarked","sanitized","sanitize","render","element","viewContainerRef","renderClipboard","renderKatex","renderMermaid","highlight","reload","getSource","src","Error","get","responseType","handleExtension","Prism","highlightAllUnder","document","noLanguageElements","querySelectorAll","Array","prototype","forEach","call","x","classList","add","html","textarea","createElement","innerHTML","extendedRenderer","defaultCode","code","isEscaped","urlProtocolIndex","lastIndexOf","urlWithoutProtocol","substring","lastSlashIndex","lastUrlSegment","split","lastDotIndex","extension","parseInline","joypixels","shortnameToUnicode","renderMathInElement","ClipboardJS","buttonTemplate","preElements","i","length","preElement","item","preWrapperElement","style","position","parentNode","insertBefore","appendChild","toolbarWrapperElement","top","opacity","transition","insertAdjacentElement","onmouseover","onmouseout","embeddedViewRef","componentRef","createComponent","hostView","createEmbeddedView","clipboardInstance","rootNodes","node","text","innerText","onDestroy","destroy","init","mermaidElements","initialize","indentStart","line","lineIdentStart","isNaN","search","Math","min","join","MarkdownService_Factory","ɵɵinject","HttpClient","DomSanitizer","ɵprov","ɵɵdefineInjectable","token","factory","Object","decorators","MarkdownComponent","_disableSanitizer","coerceBooleanProperty","_inline","srcRelativeLink","_srcRelativeLink","_clipboard","_emoji","_katex","_mermaid","lineHighlight","_lineHighlight","lineNumbers","_lineNumbers","commandLine","_commandLine","markdownService","load","ready","destroyed$","ngOnChanges","loadContent","data","handleData","handleSrc","ngAfterViewInit","handleTransclusion","subscribe","ngOnDestroy","complete","baseUrl","URL","location","origin","pathname","parsedOptions","renderOptions","clipboardButtonComponent","clipboardButtonTemplate","parsed","nativeElement","handlePlugins","emit","String","setPluginClass","CommandLine","setPluginOptions","dataFilterOutput","filterOutput","dataHost","host","dataPrompt","prompt","dataOutput","output","dataUser","user","dataLine","dataLineOffset","lineOffset","LineNumbers","dataStart","start","plugin","classes","keys","option","attributeValue","attributeName","toLispCase","setAttribute","toString","upperChars","match","str","n","replace","RegExp","toLowerCase","slice","MarkdownComponent_Factory","ɵɵdirectiveInject","ElementRef","ViewContainerRef","inputs","outputs","features","ɵɵNgOnChangesFeature","ngContentSelectors","MarkdownComponent_Template","ɵɵprojectionDef","ɵɵprojection","MarkdownPipe","domSanitizer","elementRef","zone","onStable","bypassSecurityTrustHtml","MarkdownPipe_Factory","NgZone","sharedDeclarations","MarkdownModule","forRoot","markdownModuleConfig","ngModule","providers","loader","provide","useValue","HTML","forChild","MarkdownModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","MermaidAPI","SecurityLevel","Theme","LogLevel"],"sources":["/Users/eduardovallejos/Desktop/IA-PROYECT/front-bot-ia-vector/node_modules/ngx-markdown/fesm2022/ngx-markdown.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Pipe, InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, Input, Output, SecurityContext, NgModule } from '@angular/core';\nimport { Subject, merge, of, timer } from 'rxjs';\nimport { switchMap, mapTo, distinctUntilChanged, shareReplay, startWith, map, takeUntil, first } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Renderer, marked } from 'marked';\nexport { Renderer as MarkedRenderer } from 'marked';\nimport * as i1$1 from '@angular/common/http';\nimport * as i4 from '@angular/platform-browser';\n\nconst BUTTON_TEXT_COPY = 'Copy';\nconst BUTTON_TEXT_COPIED = 'Copied';\nclass ClipboardButtonComponent {\n    constructor() {\n        this._buttonClick$ = new Subject();\n        this.copied$ = this._buttonClick$.pipe(switchMap(() => merge(of(true), timer(3000).pipe(mapTo(false)))), distinctUntilChanged(), shareReplay(1));\n        this.copiedText$ = this.copied$.pipe(startWith(false), map(copied => copied\n            ? BUTTON_TEXT_COPIED\n            : BUTTON_TEXT_COPY));\n    }\n    onCopyToClipboardClick() {\n        this._buttonClick$.next();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ClipboardButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: ClipboardButtonComponent, selector: \"markdown-clipboard\", ngImport: i0, template: `\r\n    <button\r\n      class=\"markdown-clipboard-button\"\r\n      [class.copied]=\"copied$ | async\"\r\n      (click)=\"onCopyToClipboardClick()\"\r\n    >{{ copiedText$ | async }}</button>\r\n  `, isInline: true, dependencies: [{ kind: \"pipe\", type: i1.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ClipboardButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'markdown-clipboard',\n                    template: `\r\n    <button\r\n      class=\"markdown-clipboard-button\"\r\n      [class.copied]=\"copied$ | async\"\r\n      (click)=\"onCopyToClipboardClick()\"\r\n    >{{ copiedText$ | async }}</button>\r\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }] });\n\nclass ClipboardOptions {\n}\nclass ClipboardRenderOptions extends ClipboardOptions {\n}\n\n/* eslint-disable */\nclass KatexSpecificOptions {\n}\n\nclass LanguagePipe {\n    transform(value, language) {\n        if (value == null) {\n            value = '';\n        }\n        if (language == null) {\n            language = '';\n        }\n        if (typeof value !== 'string') {\n            console.error(`LanguagePipe has been invoked with an invalid value type [${typeof value}]`);\n            return value;\n        }\n        if (typeof language !== 'string') {\n            console.error(`LanguagePipe has been invoked with an invalid parameter [${typeof language}]`);\n            return value;\n        }\n        return '```' + language + '\\n' + value + '\\n```';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LanguagePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: LanguagePipe, name: \"language\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LanguagePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'language',\n                }]\n        }] });\n\nvar PrismPlugin;\n(function (PrismPlugin) {\n    PrismPlugin[\"CommandLine\"] = \"command-line\";\n    PrismPlugin[\"LineHighlight\"] = \"line-highlight\";\n    PrismPlugin[\"LineNumbers\"] = \"line-numbers\";\n})(PrismPlugin || (PrismPlugin = {}));\n\nclass MarkedOptions {\n}\n\n/* eslint-disable max-len */\nconst errorJoyPixelsNotLoaded = '[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information';\nconst errorKatexNotLoaded = '[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\nconst errorMermaidNotLoaded = '[ngx-markdown] When using the `mermaid` attribute you *have to* include Mermaid files to `angular.json` or use imports. See README for more information';\nconst errorClipboardNotLoaded = '[ngx-markdown] When using the `clipboard` attribute you *have to* include Clipboard files to `angular.json` or use imports. See README for more information';\nconst errorClipboardViewContainerRequired = '[ngx-markdown] When using the `clipboard` attribute you *have to* provide the `viewContainerRef` parameter to `MarkdownService.render()` function';\nconst errorSrcWithoutHttpClient = '[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\n/* eslint-enable max-len */\nconst SECURITY_CONTEXT = new InjectionToken('SECURITY_CONTEXT');\nclass ExtendedRenderer extends Renderer {\n    constructor() {\n        super(...arguments);\n        this.ɵNgxMarkdownRendererExtended = false;\n    }\n}\nclass MarkdownService {\n    get options() { return this._options; }\n    set options(value) {\n        this._options = { ...this.DEFAULT_MARKED_OPTIONS, ...value };\n    }\n    get renderer() { return this.options.renderer; }\n    set renderer(value) {\n        this.options.renderer = value;\n    }\n    constructor(platform, securityContext, http, clipboardOptions, options, sanitizer) {\n        this.platform = platform;\n        this.securityContext = securityContext;\n        this.http = http;\n        this.clipboardOptions = clipboardOptions;\n        this.sanitizer = sanitizer;\n        this.DEFAULT_MARKED_OPTIONS = {\n            renderer: new Renderer(),\n        };\n        this.DEFAULT_KATEX_OPTIONS = {\n            delimiters: [\n                { left: \"$$\", right: \"$$\", display: true },\n                { left: \"$\", right: \"$\", display: false },\n                { left: \"\\\\(\", right: \"\\\\)\", display: false },\n                { left: \"\\\\begin{equation}\", right: \"\\\\end{equation}\", display: true },\n                { left: \"\\\\begin{align}\", right: \"\\\\end{align}\", display: true },\n                { left: \"\\\\begin{alignat}\", right: \"\\\\end{alignat}\", display: true },\n                { left: \"\\\\begin{gather}\", right: \"\\\\end{gather}\", display: true },\n                { left: \"\\\\begin{CD}\", right: \"\\\\end{CD}\", display: true },\n                { left: \"\\\\[\", right: \"\\\\]\", display: true },\n            ],\n        };\n        this.DEFAULT_MERMAID_OPTIONS = {\n            startOnLoad: false,\n        };\n        this.DEFAULT_CLIPBOARD_OPTIONS = {\n            buttonComponent: undefined,\n        };\n        this.DEFAULT_PARSE_OPTIONS = {\n            decodeHtml: false,\n            inline: false,\n            emoji: false,\n            mermaid: false,\n            markedOptions: this.DEFAULT_MARKED_OPTIONS,\n            disableSanitizer: false,\n        };\n        this.DEFAULT_RENDER_OPTIONS = {\n            clipboard: false,\n            clipboardOptions: undefined,\n            katex: false,\n            katexOptions: undefined,\n            mermaid: false,\n            mermaidOptions: undefined,\n        };\n        this._reload$ = new Subject();\n        this.reload$ = this._reload$.asObservable();\n        this.options = options;\n    }\n    parse(markdown, parseOptions = this.DEFAULT_PARSE_OPTIONS) {\n        const { decodeHtml, inline, emoji, mermaid, disableSanitizer, } = parseOptions;\n        const markedOptions = {\n            ...this.options,\n            ...parseOptions.markedOptions,\n        };\n        if (mermaid) {\n            this.renderer = this.extendRenderer(markedOptions.renderer || new Renderer());\n        }\n        const trimmed = this.trimIndentation(markdown);\n        const decoded = decodeHtml ? this.decodeHtml(trimmed) : trimmed;\n        const emojified = emoji ? this.parseEmoji(decoded) : decoded;\n        const marked = this.parseMarked(emojified, markedOptions, inline);\n        const sanitized = disableSanitizer ? marked : this.sanitizer.sanitize(this.securityContext, marked);\n        return sanitized || '';\n    }\n    render(element, options = this.DEFAULT_RENDER_OPTIONS, viewContainerRef) {\n        const { clipboard, clipboardOptions, katex, katexOptions, mermaid, mermaidOptions, } = options;\n        if (clipboard) {\n            this.renderClipboard(element, viewContainerRef, {\n                ...this.DEFAULT_CLIPBOARD_OPTIONS,\n                ...this.clipboardOptions,\n                ...clipboardOptions,\n            });\n        }\n        if (katex) {\n            this.renderKatex(element, {\n                ...this.DEFAULT_KATEX_OPTIONS,\n                ...katexOptions,\n            });\n        }\n        if (mermaid) {\n            this.renderMermaid(element, {\n                ...this.DEFAULT_MERMAID_OPTIONS,\n                ...mermaidOptions,\n            });\n        }\n        this.highlight(element);\n    }\n    reload() {\n        this._reload$.next();\n    }\n    getSource(src) {\n        if (!this.http) {\n            throw new Error(errorSrcWithoutHttpClient);\n        }\n        return this.http\n            .get(src, { responseType: 'text' })\n            .pipe(map(markdown => this.handleExtension(src, markdown)));\n    }\n    highlight(element) {\n        if (!isPlatformBrowser(this.platform)) {\n            return;\n        }\n        if (typeof Prism === 'undefined' || typeof Prism.highlightAllUnder === 'undefined') {\n            return;\n        }\n        if (!element) {\n            element = document;\n        }\n        const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\n        Array.prototype.forEach.call(noLanguageElements, (x) => x.classList.add('language-none'));\n        Prism.highlightAllUnder(element);\n    }\n    decodeHtml(html) {\n        if (!isPlatformBrowser(this.platform)) {\n            return html;\n        }\n        const textarea = document.createElement('textarea');\n        textarea.innerHTML = html;\n        return textarea.value;\n    }\n    extendRenderer(renderer) {\n        const extendedRenderer = renderer;\n        if (extendedRenderer.ɵNgxMarkdownRendererExtended === true) {\n            return renderer;\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        const defaultCode = renderer.code;\n        renderer.code = function (code, language, isEscaped) {\n            return language === 'mermaid'\n                ? `<div class=\"mermaid\">${code}</div>`\n                : defaultCode.call(this, code, language, isEscaped);\n        };\n        extendedRenderer.ɵNgxMarkdownRendererExtended = true;\n        return renderer;\n    }\n    handleExtension(src, markdown) {\n        const urlProtocolIndex = src.lastIndexOf('://');\n        const urlWithoutProtocol = urlProtocolIndex > -1\n            ? src.substring(urlProtocolIndex + 4)\n            : src;\n        const lastSlashIndex = urlWithoutProtocol.lastIndexOf('/');\n        const lastUrlSegment = lastSlashIndex > -1\n            ? urlWithoutProtocol.substring(lastSlashIndex + 1).split('?')[0]\n            : '';\n        const lastDotIndex = lastUrlSegment.lastIndexOf('.');\n        const extension = lastDotIndex > -1\n            ? lastUrlSegment.substring(lastDotIndex + 1)\n            : '';\n        return !!extension && extension !== 'md'\n            ? '```' + extension + '\\n' + markdown + '\\n```'\n            : markdown;\n    }\n    parseMarked(html, markedOptions, inline = false) {\n        return inline\n            ? marked.parseInline(html, markedOptions)\n            : marked.parse(html, markedOptions);\n    }\n    parseEmoji(html) {\n        if (!isPlatformBrowser(this.platform)) {\n            return html;\n        }\n        if (typeof joypixels === 'undefined' || typeof joypixels.shortnameToUnicode === 'undefined') {\n            throw new Error(errorJoyPixelsNotLoaded);\n        }\n        return joypixels.shortnameToUnicode(html);\n    }\n    renderKatex(element, options) {\n        if (!isPlatformBrowser(this.platform)) {\n            return;\n        }\n        if (typeof katex === 'undefined' || typeof renderMathInElement === 'undefined') {\n            throw new Error(errorKatexNotLoaded);\n        }\n        renderMathInElement(element, options);\n    }\n    renderClipboard(element, viewContainerRef, options) {\n        if (!isPlatformBrowser(this.platform)) {\n            return;\n        }\n        if (typeof ClipboardJS === 'undefined') {\n            throw new Error(errorClipboardNotLoaded);\n        }\n        if (!viewContainerRef) {\n            throw new Error(errorClipboardViewContainerRequired);\n        }\n        const { buttonComponent, buttonTemplate, } = options;\n        // target every <pre> elements\n        const preElements = element.querySelectorAll('pre');\n        for (let i = 0; i < preElements.length; i++) {\n            const preElement = preElements.item(i);\n            // create <pre> wrapper element\n            const preWrapperElement = document.createElement('div');\n            preWrapperElement.style.position = 'relative';\n            preElement.parentNode.insertBefore(preWrapperElement, preElement);\n            preWrapperElement.appendChild(preElement);\n            // create toolbar element\n            const toolbarWrapperElement = document.createElement('div');\n            toolbarWrapperElement.style.position = 'absolute';\n            toolbarWrapperElement.style.top = '.5em';\n            toolbarWrapperElement.style.right = '.5em';\n            toolbarWrapperElement.style.opacity = '0';\n            toolbarWrapperElement.style.transition = 'opacity 250ms ease-out';\n            preWrapperElement.insertAdjacentElement('beforeend', toolbarWrapperElement);\n            // register listener to show/hide toolbar\n            preElement.onmouseover = () => toolbarWrapperElement.style.opacity = '1';\n            preElement.onmouseout = () => toolbarWrapperElement.style.opacity = '0';\n            // declare embeddedViewRef holding variable\n            let embeddedViewRef;\n            // use provided component via input property\n            // or provided via ClipboardOptions provider\n            if (buttonComponent) {\n                const componentRef = viewContainerRef.createComponent(buttonComponent);\n                embeddedViewRef = componentRef.hostView;\n            }\n            // use provided template via input property\n            else if (buttonTemplate) {\n                embeddedViewRef = viewContainerRef.createEmbeddedView(buttonTemplate);\n            }\n            // use default component\n            else {\n                const componentRef = viewContainerRef.createComponent(ClipboardButtonComponent);\n                embeddedViewRef = componentRef.hostView;\n            }\n            // declare clipboard instance variable\n            let clipboardInstance;\n            // attach clipboard.js to root node\n            embeddedViewRef.rootNodes.forEach((node) => {\n                node.onmouseover = () => toolbarWrapperElement.style.opacity = '1';\n                toolbarWrapperElement.appendChild(node);\n                clipboardInstance = new ClipboardJS(node, { text: () => preElement.innerText });\n            });\n            // destroy clipboard instance when view is destroyed\n            embeddedViewRef.onDestroy(() => clipboardInstance.destroy());\n        }\n    }\n    renderMermaid(element, options = this.DEFAULT_MERMAID_OPTIONS) {\n        if (!isPlatformBrowser(this.platform)) {\n            return;\n        }\n        if (typeof mermaid === 'undefined' || typeof mermaid.init === 'undefined') {\n            throw new Error(errorMermaidNotLoaded);\n        }\n        const mermaidElements = element.querySelectorAll('.mermaid');\n        if (mermaidElements.length === 0) {\n            return;\n        }\n        mermaid.initialize(options);\n        mermaid.init(mermaidElements);\n    }\n    trimIndentation(markdown) {\n        if (!markdown) {\n            return '';\n        }\n        let indentStart;\n        return markdown\n            .split('\\n')\n            .map(line => {\n            let lineIdentStart = indentStart;\n            if (line.length > 0) {\n                lineIdentStart = isNaN(lineIdentStart)\n                    ? line.search(/\\S|$/)\n                    : Math.min(line.search(/\\S|$/), lineIdentStart);\n            }\n            if (isNaN(indentStart)) {\n                indentStart = lineIdentStart;\n            }\n            return lineIdentStart\n                ? line.substring(lineIdentStart)\n                : line;\n        }).join('\\n');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownService, deps: [{ token: PLATFORM_ID }, { token: SECURITY_CONTEXT }, { token: i1$1.HttpClient, optional: true }, { token: ClipboardOptions, optional: true }, { token: MarkedOptions, optional: true }, { token: i4.DomSanitizer }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.SecurityContext, decorators: [{\n                    type: Inject,\n                    args: [SECURITY_CONTEXT]\n                }] }, { type: i1$1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: ClipboardOptions, decorators: [{\n                    type: Optional\n                }] }, { type: MarkedOptions, decorators: [{\n                    type: Optional\n                }] }, { type: i4.DomSanitizer }]; } });\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nclass MarkdownComponent {\n    get disableSanitizer() { return this._disableSanitizer; }\n    set disableSanitizer(value) { this._disableSanitizer = this.coerceBooleanProperty(value); }\n    get inline() { return this._inline; }\n    set inline(value) { this._inline = this.coerceBooleanProperty(value); }\n    get srcRelativeLink() { return this._srcRelativeLink; }\n    set srcRelativeLink(value) { this._srcRelativeLink = this.coerceBooleanProperty(value); }\n    // Plugin - clipboard\n    get clipboard() { return this._clipboard; }\n    set clipboard(value) { this._clipboard = this.coerceBooleanProperty(value); }\n    // Plugin - emoji\n    get emoji() { return this._emoji; }\n    set emoji(value) { this._emoji = this.coerceBooleanProperty(value); }\n    // Plugin - katex\n    get katex() { return this._katex; }\n    set katex(value) { this._katex = this.coerceBooleanProperty(value); }\n    // Plugin - mermaid\n    get mermaid() { return this._mermaid; }\n    set mermaid(value) { this._mermaid = this.coerceBooleanProperty(value); }\n    // Plugin - lineHighlight\n    get lineHighlight() { return this._lineHighlight; }\n    set lineHighlight(value) { this._lineHighlight = this.coerceBooleanProperty(value); }\n    // Plugin - lineNumbers\n    get lineNumbers() { return this._lineNumbers; }\n    set lineNumbers(value) { this._lineNumbers = this.coerceBooleanProperty(value); }\n    // Plugin - commandLine\n    get commandLine() { return this._commandLine; }\n    set commandLine(value) { this._commandLine = this.coerceBooleanProperty(value); }\n    constructor(element, markdownService, viewContainerRef) {\n        this.element = element;\n        this.markdownService = markdownService;\n        this.viewContainerRef = viewContainerRef;\n        // Event emitters\n        this.error = new EventEmitter();\n        this.load = new EventEmitter();\n        this.ready = new EventEmitter();\n        this._clipboard = false;\n        this._commandLine = false;\n        this._disableSanitizer = false;\n        this._emoji = false;\n        this._inline = false;\n        this._katex = false;\n        this._lineHighlight = false;\n        this._lineNumbers = false;\n        this._mermaid = false;\n        this._srcRelativeLink = false;\n        this.destroyed$ = new Subject();\n    }\n    ngOnChanges() {\n        this.loadContent();\n    }\n    loadContent() {\n        if (this.data != null) {\n            this.handleData();\n            return;\n        }\n        if (this.src != null) {\n            this.handleSrc();\n            return;\n        }\n    }\n    ngAfterViewInit() {\n        if (!this.data && !this.src) {\n            this.handleTransclusion();\n        }\n        this.markdownService.reload$\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe(() => this.loadContent());\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n    render(markdown, decodeHtml = false) {\n        let markedOptions;\n        if (this.src && this.srcRelativeLink) {\n            const baseUrl = new URL(this.src, location.origin).pathname;\n            markedOptions = { baseUrl };\n        }\n        const parsedOptions = {\n            decodeHtml,\n            inline: this.inline,\n            emoji: this.emoji,\n            mermaid: this.mermaid,\n            markedOptions,\n            disableSanitizer: this.disableSanitizer,\n        };\n        const renderOptions = {\n            clipboard: this.clipboard,\n            clipboardOptions: {\n                buttonComponent: this.clipboardButtonComponent,\n                buttonTemplate: this.clipboardButtonTemplate,\n            },\n            katex: this.katex,\n            katexOptions: this.katexOptions,\n            mermaid: this.mermaid,\n            mermaidOptions: this.mermaidOptions,\n        };\n        const parsed = this.markdownService.parse(markdown, parsedOptions);\n        this.element.nativeElement.innerHTML = parsed;\n        this.handlePlugins();\n        this.markdownService.render(this.element.nativeElement, renderOptions, this.viewContainerRef);\n        this.ready.emit();\n    }\n    coerceBooleanProperty(value) {\n        return value != null && `${String(value)}` !== 'false';\n    }\n    handleData() {\n        this.render(this.data);\n    }\n    handleSrc() {\n        this.markdownService\n            .getSource(this.src)\n            .subscribe({\n            next: markdown => {\n                this.render(markdown);\n                this.load.emit(markdown);\n            },\n            error: (error) => this.error.emit(error),\n        });\n    }\n    handleTransclusion() {\n        this.render(this.element.nativeElement.innerHTML, true);\n    }\n    handlePlugins() {\n        if (this.commandLine) {\n            this.setPluginClass(this.element.nativeElement, PrismPlugin.CommandLine);\n            this.setPluginOptions(this.element.nativeElement, {\n                dataFilterOutput: this.filterOutput,\n                dataHost: this.host,\n                dataPrompt: this.prompt,\n                dataOutput: this.output,\n                dataUser: this.user,\n            });\n        }\n        if (this.lineHighlight) {\n            this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });\n        }\n        if (this.lineNumbers) {\n            this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\n            this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });\n        }\n    }\n    setPluginClass(element, plugin) {\n        const preElements = element.querySelectorAll('pre');\n        for (let i = 0; i < preElements.length; i++) {\n            const classes = plugin instanceof Array ? plugin : [plugin];\n            preElements.item(i).classList.add(...classes);\n        }\n    }\n    setPluginOptions(element, options) {\n        const preElements = element.querySelectorAll('pre');\n        for (let i = 0; i < preElements.length; i++) {\n            Object.keys(options).forEach(option => {\n                const attributeValue = options[option];\n                if (attributeValue) {\n                    const attributeName = this.toLispCase(option);\n                    preElements.item(i).setAttribute(attributeName, attributeValue.toString());\n                }\n            });\n        }\n    }\n    toLispCase(value) {\n        const upperChars = value.match(/([A-Z])/g);\n        if (!upperChars) {\n            return value;\n        }\n        let str = value.toString();\n        for (let i = 0, n = upperChars.length; i < n; i++) {\n            str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\n        }\n        if (str.slice(0, 1) === '-') {\n            str = str.slice(1);\n        }\n        return str;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownComponent, deps: [{ token: i0.ElementRef }, { token: MarkdownService }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MarkdownComponent, selector: \"markdown, [markdown]\", inputs: { data: \"data\", src: \"src\", disableSanitizer: \"disableSanitizer\", inline: \"inline\", srcRelativeLink: \"srcRelativeLink\", clipboard: \"clipboard\", clipboardButtonComponent: \"clipboardButtonComponent\", clipboardButtonTemplate: \"clipboardButtonTemplate\", emoji: \"emoji\", katex: \"katex\", katexOptions: \"katexOptions\", mermaid: \"mermaid\", mermaidOptions: \"mermaidOptions\", lineHighlight: \"lineHighlight\", line: \"line\", lineOffset: \"lineOffset\", lineNumbers: \"lineNumbers\", start: \"start\", commandLine: \"commandLine\", filterOutput: \"filterOutput\", host: \"host\", prompt: \"prompt\", output: \"output\", user: \"user\" }, outputs: { error: \"error\", load: \"load\", ready: \"ready\" }, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownComponent, decorators: [{\n            type: Component,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/component-selector\n                    selector: 'markdown, [markdown]',\n                    template: '<ng-content></ng-content>',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MarkdownService }, { type: i0.ViewContainerRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], src: [{\n                type: Input\n            }], disableSanitizer: [{\n                type: Input\n            }], inline: [{\n                type: Input\n            }], srcRelativeLink: [{\n                type: Input\n            }], clipboard: [{\n                type: Input\n            }], clipboardButtonComponent: [{\n                type: Input\n            }], clipboardButtonTemplate: [{\n                type: Input\n            }], emoji: [{\n                type: Input\n            }], katex: [{\n                type: Input\n            }], katexOptions: [{\n                type: Input\n            }], mermaid: [{\n                type: Input\n            }], mermaidOptions: [{\n                type: Input\n            }], lineHighlight: [{\n                type: Input\n            }], line: [{\n                type: Input\n            }], lineOffset: [{\n                type: Input\n            }], lineNumbers: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], commandLine: [{\n                type: Input\n            }], filterOutput: [{\n                type: Input\n            }], host: [{\n                type: Input\n            }], prompt: [{\n                type: Input\n            }], output: [{\n                type: Input\n            }], user: [{\n                type: Input\n            }], error: [{\n                type: Output\n            }], load: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }] } });\n\nclass MarkdownPipe {\n    constructor(domSanitizer, elementRef, markdownService, viewContainerRef, zone) {\n        this.domSanitizer = domSanitizer;\n        this.elementRef = elementRef;\n        this.markdownService = markdownService;\n        this.viewContainerRef = viewContainerRef;\n        this.zone = zone;\n    }\n    transform(value, options) {\n        if (value == null) {\n            return '';\n        }\n        if (typeof value !== 'string') {\n            console.error(`MarkdownPipe has been invoked with an invalid value type [${typeof value}]`);\n            return value;\n        }\n        const markdown = this.markdownService.parse(value, options);\n        this.zone.onStable\n            .pipe(first())\n            .subscribe(() => this.markdownService.render(this.elementRef.nativeElement, options, this.viewContainerRef));\n        return this.domSanitizer.bypassSecurityTrustHtml(markdown);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownPipe, deps: [{ token: i4.DomSanitizer }, { token: i0.ElementRef }, { token: MarkdownService }, { token: i0.ViewContainerRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownPipe, name: \"markdown\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'markdown',\n                }]\n        }], ctorParameters: function () { return [{ type: i4.DomSanitizer }, { type: i0.ElementRef }, { type: MarkdownService }, { type: i0.ViewContainerRef }, { type: i0.NgZone }]; } });\n\nconst sharedDeclarations = [\n    ClipboardButtonComponent,\n    LanguagePipe,\n    MarkdownComponent,\n    MarkdownPipe,\n];\nclass MarkdownModule {\n    static forRoot(markdownModuleConfig) {\n        return {\n            ngModule: MarkdownModule,\n            providers: [\n                MarkdownService,\n                markdownModuleConfig && markdownModuleConfig.loader || [],\n                markdownModuleConfig && markdownModuleConfig.clipboardOptions || [],\n                markdownModuleConfig && markdownModuleConfig.markedOptions || [],\n                {\n                    provide: SECURITY_CONTEXT,\n                    useValue: markdownModuleConfig && markdownModuleConfig.sanitize != null\n                        ? markdownModuleConfig.sanitize\n                        : SecurityContext.HTML,\n                },\n            ],\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: MarkdownModule,\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownModule, declarations: [ClipboardButtonComponent,\n            LanguagePipe,\n            MarkdownComponent,\n            MarkdownPipe], imports: [CommonModule], exports: [ClipboardButtonComponent,\n            LanguagePipe,\n            MarkdownComponent,\n            MarkdownPipe] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MarkdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: sharedDeclarations,\n                    declarations: sharedDeclarations,\n                }]\n        }] });\n\n/* eslint-disable */\nvar MermaidAPI;\n(function (MermaidAPI) {\n    let SecurityLevel;\n    (function (SecurityLevel) {\n        /**\n         * (default) tags in text are encoded, click functionality is disabled\n         */\n        SecurityLevel[\"Strict\"] = \"strict\";\n        /**\n         * tags in text are allowed, click functionality is enabled\n         */\n        SecurityLevel[\"Loose\"] = \"loose\";\n        /**\n         * html tags in text are allowed, (only script element is removed), click functionality is enabled\n         */\n        SecurityLevel[\"Antiscript\"] = \"antiscript\";\n        /**\n         * with this security level all rendering takes place in a sandboxed iframe.\n         * This prevent any javascript running in the context.\n         * This may hinder interactive functionality of the diagram like scripts,\n         * popups in sequence diagram or links to other tabs/targets etc.\n         */\n        SecurityLevel[\"Sandbox\"] = \"sandbox\";\n    })(SecurityLevel = MermaidAPI.SecurityLevel || (MermaidAPI.SecurityLevel = {}));\n    let Theme;\n    (function (Theme) {\n        /**\n         * Designed to modified, as the name implies it is supposed to be used as the base for making custom themes.\n         */\n        Theme[\"Base\"] = \"base\";\n        /**\n         * A theme full of light greens that is easy on the eyes.\n         */\n        Theme[\"Forest\"] = \"forest\";\n        /**\n         * A theme that would go well with other dark colored elements.\n         */\n        Theme[\"Dark\"] = \"dark\";\n        /**\n         *  The default theme for all diagrams.\n         */\n        Theme[\"Default\"] = \"default\";\n        /**\n         * The theme to be used for black and white printing\n         */\n        Theme[\"Neutral\"] = \"neutral\";\n    })(Theme = MermaidAPI.Theme || (MermaidAPI.Theme = {}));\n    let LogLevel;\n    (function (LogLevel) {\n        LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n        LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n        LogLevel[LogLevel[\"Warn\"] = 3] = \"Warn\";\n        LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n        LogLevel[LogLevel[\"Fatal\"] = 5] = \"Fatal\";\n    })(LogLevel = MermaidAPI.LogLevel || (MermaidAPI.LogLevel = {}));\n})(MermaidAPI || (MermaidAPI = {}));\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClipboardButtonComponent, ClipboardOptions, ClipboardRenderOptions, ExtendedRenderer, KatexSpecificOptions, LanguagePipe, MarkdownComponent, MarkdownModule, MarkdownPipe, MarkdownService, MarkedOptions, MermaidAPI, PrismPlugin, SECURITY_CONTEXT, errorClipboardNotLoaded, errorClipboardViewContainerRequired, errorJoyPixelsNotLoaded, errorKatexNotLoaded, errorMermaidNotLoaded, errorSrcWithoutHttpClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}